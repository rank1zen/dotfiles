if vim.g.colors_name ~= nil then vim.cmd('highlight clear') end

local hi = function(name, data) vim.api.nvim_set_hl(0, name, data) end

local p = {
  N0 = '#000000',
  N1 = '#666666',
  N2 = '#999999',
  N3 = '#bbbbbb',
  N4 = '#ff9999',
  N5 = '#ff0000',
  N6 = '#41436a',
  N7 = '#fe9677',
}

-- Builtin highlighting groups
-- stylua: ignore start
-- hi('ColorColumn',    { fg=nil,       bg=p.bg_mid2 })
-- hi('ComplMatchIns',  { fg=nil,       bg=nil })
-- hi('Conceal',        { fg=p.azure,   bg=nil })
-- hi('CurSearch',      { fg=p.bg,      bg=p.yellow })
-- hi('Cursor',         { fg=p.bg,      bg=p.fg })
-- hi('CursorColumn',   { fg=nil,       bg=p.bg_mid })
-- hi('CursorIM',       { link='Cursor' })
-- hi('CursorLine',     { fg=nil,       bg=p.bg_mid })
-- hi('CursorLineFold', { fg=p.bg_mid2, bg=nil })
-- hi('CursorLineNr',   { fg=p.accent,  bg=nil,       bold=true })
-- hi('CursorLineSign', { fg=p.bg_mid2, bg=nil })
-- hi('DiffAdd',        { fg=nil,       bg=p.green_bg })
-- hi('DiffChange',     { fg=nil,       bg=p.cyan_bg })
-- hi('DiffDelete',     { fg=nil,       bg=p.red_bg })
-- hi('DiffText',       { fg=nil,       bg=p.yellow_bg })
-- hi('Directory',      { fg=p.azure,   bg=nil })
-- hi('EndOfBuffer',    { fg=p.bg_mid2, bg=nil })
-- hi('ErrorMsg',       { fg=p.red,     bg=nil })
-- hi('FloatBorder',    { fg=p.accent,  bg=p.bg_edge })
-- hi('FloatTitle',     { fg=p.accent,  bg=p.bg_edge, bold=true })
-- hi('FoldColumn',     { fg=p.bg_mid2, bg=nil })
-- hi('Folded',         { fg=p.fg_mid2, bg=p.bg_edge })
-- hi('IncSearch',      { fg=p.bg,      bg=p.yellow })
-- hi('lCursor',        { fg=p.bg,      bg=p.fg })
-- hi('LineNr',         { fg=p.bg_mid2, bg=nil })
-- hi('LineNrAbove',    { link='LineNr' })
-- hi('LineNrBelow',    { link='LineNr' })
-- hi('MatchParen',     { fg=nil,       bg=p.bg_mid2, bold=true })
-- hi('ModeMsg',        { fg=p.green,   bg=nil })
-- hi('MoreMsg',        { fg=p.azure,   bg=nil })
-- hi('MsgArea',        { link='Normal' })
-- hi('MsgSeparator',   { fg=p.fg_mid2, bg=p.bg_mid2 })
-- hi('NonText',        { fg=p.bg_mid2, bg=nil })
hi('Normal',         { fg=p.N0,      bg=nil })
-- hi('NormalFloat',    { fg=p.fg,      bg=p.bg_edge })
-- hi('NormalNC',       { link='Normal' })
-- hi('Pmenu',          { fg=p.fg,      bg=p.bg_mid })
-- hi('PmenuExtra',     { link='Pmenu' })
-- hi('PmenuExtraSel',  { link='PmenuSel' })
-- hi('PmenuKind',      { link='Pmenu' })
-- hi('PmenuKindSel',   { link='PmenuSel' })
-- hi('PmenuMatch',     { fg=p.fg,      bg=p.bg_mid,  bold=true })
-- hi('PmenuMatchSel',  { fg=nil,       bg=nil,       bold=true,   blend=0, reverse=true })
-- hi('PmenuSbar',      { link='Pmenu' })
-- hi('PmenuSel',       { fg=nil,       bg=nil,       blend=0,     reverse=true })
-- hi('PmenuThumb',     { fg=nil,       bg=p.bg_mid2 })
-- hi('Question',       { fg=p.azure,   bg=nil })
-- hi('QuickFixLine',   { fg=nil,       bg=nil,       bold=true })
-- hi('Search',         { fg=p.bg,      bg=p.accent })
-- hi('SignColumn',     { fg=p.bg_mid2, bg=nil })
-- hi('SpecialKey',     { fg=p.bg_mid2, bg=nil })
-- hi('SpellBad',       { fg=nil,       bg=nil,       sp=p.red,    undercurl=true })
-- hi('SpellCap',       { fg=nil,       bg=nil,       sp=p.cyan,   undercurl=true })
-- hi('SpellLocal',     { fg=nil,       bg=nil,       sp=p.yellow, undercurl=true })
-- hi('SpellRare',      { fg=nil,       bg=nil,       sp=p.blue,   undercurl=true })
-- hi('StatusLine',     { fg=p.fg_mid,  bg=p.accent_bg })
-- hi('StatusLineNC',   { fg=p.fg_mid,  bg=p.bg_edge })
-- hi('Substitute',     { fg=p.bg,      bg=p.blue })
-- hi('TabLine',        { fg=p.fg_mid,  bg=p.bg_edge })
-- hi('TabLineFill',    { link='Tabline' })
-- hi('TabLineSel',     { fg=p.accent,  bg=p.bg_edge })
-- hi('TermCursor',     { fg=nil,       bg=nil,       reverse=true })
-- hi('TermCursorNC',   { fg=nil,       bg=nil,       reverse=true })
-- hi('Title',          { fg=p.accent,  bg=nil })
-- hi('VertSplit',      { fg=p.accent,  bg=nil })
-- hi('Visual',         { fg=nil,       bg=p.bg_mid2 })
-- hi('VisualNOS',      { fg=nil,       bg=p.bg_mid })
-- hi('WarningMsg',     { fg=p.yellow,  bg=nil })
-- hi('Whitespace',     { fg=p.bg_mid2, bg=nil })
-- hi('WildMenu',       { link='PmenuSel' })
-- hi('WinBar',         { link='StatusLine' })
-- hi('WinBarNC',       { link='StatusLineNC' })
-- hi('WinSeparator',   { fg=p.accent,  bg=nil })
-- stylua: ignore end

-- Standard syntax (affects treesitter)
-- stylua: ignore start
hi('Boolean',        { link = 'Constant' })
hi('Character',      { link = 'Constant' })
hi('Comment',        { fg = p.N3, bg = nil })
hi('Conditional',    { link = 'Statement' })
hi('Constant',       { fg = p.N0, bg = nil })
-- hi('Debug',          { link = 'Special' })
-- hi('Define',         { link = 'PreProc' })
-- hi('Delimiter',      { fg = p.orange,  bg = nil })
-- hi('Error',          { fg = nil,       bg = p.red_bg })
hi('Exception',      { link = 'Statement' })
hi('Float',          { link = 'Constant' })
hi('Function',       { fg = p.N0, bg = nil })
-- hi('Identifier',     { fg = p.yellow,  bg = nil })
hi('Ignore',         { fg = nil,  bg = nil })
-- hi('Include',        { link = 'PreProc' })
hi('Keyword',        { link = 'Statement' })
hi('Label',          { link = 'Statement' })
-- hi('Macro',          { link = 'PreProc' })
hi('Number',         { link = 'Constant' })
-- hi('Operator',       { fg = p.fg,      bg = nil })
-- hi('PreCondit',      { link = 'PreProc' })
-- hi('PreProc',        { fg = p.blue,    bg = nil })
hi('Repeat',         { link = 'Statement' })
-- hi('Special',        { fg = p.cyan,    bg = nil })
-- hi('SpecialChar',    { link = 'Special' })
-- hi('SpecialComment', { link = 'Special' })
hi('Statement',      { fg = p.N0, bg = nil, bold = true })
hi('StorageClass',   { link = 'Type' })
hi('String',         { link = 'Constant' })
hi('Structure',      { link = 'Type' })
-- hi('Tag',            { link = 'Special' })
-- hi('Todo',           { fg = p.accent,  bg = p.accent_bg, bold = true })
hi('Type',           { fg = p.N0, bg = nil })
hi('Typedef',        { link = 'Type' })
-- stylua: ignore end

hi('MiniJump2dSpot', { fg = p.N4, bg = nil })
hi('MiniJump2dSpotUnique', { fg = p.N5, bg = nil })

vim.g.colors_name = 'noe'
